package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SearchAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchAllPropertiesEquals(Search expected, Search actual) {
        assertSearchAutoGeneratedPropertiesEquals(expected, actual);
        assertSearchAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchAllUpdatablePropertiesEquals(Search expected, Search actual) {
        assertSearchUpdatableFieldsEquals(expected, actual);
        assertSearchUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchAutoGeneratedPropertiesEquals(Search expected, Search actual) {
        assertThat(actual)
            .as("Verify Search auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchUpdatableFieldsEquals(Search expected, Search actual) {
        assertThat(actual)
            .as("Verify Search relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getFavorite()).as("check favorite").isEqualTo(expected.getFavorite()))
            .satisfies(a -> assertThat(a.getCreateDate()).as("check createDate").isEqualTo(expected.getCreateDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSearchUpdatableRelationshipsEquals(Search expected, Search actual) {
        // empty method
    }
}
